"""add last login

Revision ID: cf5c752e5d19
Revises: bee05e85cd0d
Create Date: 2024-06-23 13:33:55.630575

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cf5c752e5d19'
down_revision: Union[str, None] = 'bee05e85cd0d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('verification_tokens')
    op.drop_index('ix_login_sessions_user_id', table_name='login_sessions')
    op.drop_table('login_sessions')
    op.drop_index('ix_accounts_user_id', table_name='accounts')
    op.drop_index('provider_and_provider_account_id', table_name='accounts')
    op.drop_table('accounts')
    op.add_column('users', sa.Column('realm', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_login_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'realm')
    op.create_table('accounts',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('provider_account_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='accounts_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='accounts_pkey')
    )
    op.create_index('provider_and_provider_account_id', 'accounts', ['provider', 'provider_account_id'], unique=False)
    op.create_index('ix_accounts_user_id', 'accounts', ['user_id'], unique=False)
    op.create_table('login_sessions',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='login_sessions_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='login_sessions_pkey')
    )
    op.create_index('ix_login_sessions_user_id', 'login_sessions', ['user_id'], unique=False)
    op.create_table('verification_tokens',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('identifier', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='verification_tokens_pkey')
    )
    # ### end Alembic commands ###
